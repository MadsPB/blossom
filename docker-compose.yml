version: '3.1'

services:

  user_api:
    build: UserApi/.
    ports: 
      - 3000:3000
    depends_on:
      user_session_db:
        condition: service_started
      postgres_db:
        condition: service_healthy
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_HOST: user_db
      POSTGRES_PORT: 5432
      REDIS_DB: user_session_db

  user_session_db:
    image: redis
    restart: always

  user_db:
    image: postgres
    restart: always
    volumes:
      - ./volumes/userdb:/var/lib/postgresql/data 
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: userdb
      PGUSER: postgres
      POSTGRES_HOST: 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "userdb"]
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 5s 

  project_api:
    build: ProjectApi/.
    ports:
      - 3001:3001
    depends_on:
      postgres_db:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres_db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "mysecretpassword"
      AUTH_URL: http://user_api:3000

  postgres_db:
    image: postgres
    restart: always
    ports:
      - 5555:5432 #remove for production, used for allowing local development against
    volumes:
      - ./volumes/projectdb:/var/lib/postgresql/data 
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: projectdb
      PGUSER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "projectdb"]
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 5s  

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  image_upload:
    build: ImageApi/.
    ports:
      - 3002:3002
    restart: always
    volumes:
      - ./volumes/files:/api/files/

  file_server:
    image: nginx
    ports: 
      - 8081:80
    volumes:
      - ./volumes/files:/usr/share/nginx/html/files/
      - ./mysite.template:/etc/nginx/sites-available/default
  
  social_api:
    build: SocialApi/.
    restart: always
    ports:
      - 3004:3004
    depends_on:
      social_db:
        condition: service_started
    environment:
      MONGO_HOST: root:example@social_db
      AUTH_URL: http://user_api:3000
      MONGO_ROOT_USERNAME: root
      MONGO_ROOT_PASSWORD: example

  social_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    
